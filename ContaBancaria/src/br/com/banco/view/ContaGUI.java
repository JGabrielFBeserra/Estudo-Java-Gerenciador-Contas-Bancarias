/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.com.banco.view;

import br.com.banco.service.BancoService;
import br.com.banco.service.ContaCorrenteService;
import br.com.banco.service.TarifaService;
import br.com.banco.model.ContaCorrente;
import br.com.banco.strategy.TarifaStrategy;

import javax.swing.JOptionPane;
import br.com.banco.strategy.TarifaStrategy;
import java.text.NumberFormat;
import java.util.Locale;

public class ContaGUI extends javax.swing.JDialog {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ContaGUI.class.getName());

    private final BancoService bancoService;
    private final ContaCorrenteService contaService;
    private final TarifaService tarifaService;
    private final ContaCorrente conta;

    /**
     * Creates new form ContaGUI
     */
    public ContaGUI(
            java.awt.Frame parent,
            boolean modal,
            BancoService bancoService,
            ContaCorrenteService contaService,
            TarifaService tarifaService,
            ContaCorrente conta
    ) {
        super(parent, modal);
        initComponents();
        this.bancoService = bancoService;
        this.contaService = contaService;
        this.tarifaService = tarifaService;
        this.conta = conta;
        setLocationRelativeTo(parent);

        carregarDadosConta();
        configurarComboTarifa();                 
        cmbTarifa.addActionListener(e -> atualizarTarifaPrevista());
        atualizarTarifaPrevista();
    }

    private void carregarDadosConta() {
        lblId.setText(String.valueOf(conta.getId()));
        txtTitular.setText(conta.getTitular());
        lblSaldo.setText(String.valueOf(conta.getSaldo()));
    }

    private final NumberFormat BRL = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));

    private void configurarComboTarifa() {
        JOptionPane.showMessageDialog(null, "isso roda");
        // Preenche com os NAMES do enum
        String[] itens = java.util.Arrays.stream(br.com.banco.strategy.TarifaStrategy.values())
                .map(Enum::name)
                .toArray(String[]::new);

        cmbTarifa.setModel(new javax.swing.DefaultComboBoxModel<>(itens));



        cmbTarifa.setSelectedItem("FIXA");
    }

    private void atualizarTarifaPrevista() {
        String sel = (String) cmbTarifa.getSelectedItem(); // "FIXA" | "PERCENTUAL" | "ISENTA"
        if (sel == null) {
            lblTarifarEm.setText("Tarifa: â€”");
            return;
        }
        TarifaStrategy strat = TarifaStrategy.valueOf(sel);
        double valor = Math.max(0.0, strat.calcular(conta.getSaldo())); // calcula sobre o saldo atual
        lblTarifarEm.setText("Tarifa: " + BRL.format(valor));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarTitular = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        lblI = new javax.swing.JLabel();
        txtTitular = new javax.swing.JTextField();
        lblS = new javax.swing.JLabel();
        lblTitular = new javax.swing.JLabel();
        btnSalvarTitular1 = new javax.swing.JButton();
        lblTarifaPrevista = new javax.swing.JLabel();
        btnAplicarTarifa = new javax.swing.JButton();
        cmbTarifa = new javax.swing.JComboBox<>();
        lblSaldo = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblTarifarEm = new javax.swing.JLabel();

        btnSalvarTitular.setText("Editar Titular");
        btnSalvarTitular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarTitularActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnVoltar.setText("<- Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        lblI.setText("ID: ");

        txtTitular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitularActionPerformed(evt);
            }
        });

        lblS.setText("Saldo: ");

        lblTitular.setText("Titular: ");

        btnSalvarTitular1.setText("Editar Titular");
        btnSalvarTitular1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarTitular1ActionPerformed(evt);
            }
        });

        lblTarifaPrevista.setText("Tarifa Prevista ");

        btnAplicarTarifa.setText("Aplicar Tarifa");
        btnAplicarTarifa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarTarifaActionPerformed(evt);
            }
        });

        cmbTarifa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblSaldo.setText("-");

        lblId.setText("-");

        lblTarifarEm.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSalvarTitular1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblTitular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(lblI))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAplicarTarifa, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(cmbTarifa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTarifaPrevista)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(lblTarifarEm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblI)
                    .addComponent(lblTarifaPrevista)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitular)
                    .addComponent(cmbTarifa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblS)
                    .addComponent(lblSaldo)
                    .addComponent(lblTarifarEm))
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarTitular1)
                    .addComponent(btnAplicarTarifa))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void txtTitularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitularActionPerformed

    }//GEN-LAST:event_txtTitularActionPerformed

    private void btnSalvarTitularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarTitularActionPerformed

    }//GEN-LAST:event_btnSalvarTitularActionPerformed

    private void btnSalvarTitular1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarTitular1ActionPerformed
        String novoTitular = txtTitular.getText();

        if (novoTitular == null || novoTitular.isBlank()) {
            JOptionPane.showMessageDialog(this, "O nome do titular nÃ£o pode ser vazio!");
            return;
        }
        JOptionPane.showMessageDialog(null, "Carai");
        conta.setTitular(novoTitular);
        JOptionPane.showMessageDialog(this, "Titular atualizado com sucesso!");
    }//GEN-LAST:event_btnSalvarTitular1ActionPerformed

    private void btnAplicarTarifaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarTarifaActionPerformed
            // 1) pega a estratÃ©gia escolhida no combo (o combo estÃ¡ com String)
    String sel = (String) cmbTarifa.getSelectedItem();
    if (sel == null) {
        JOptionPane.showMessageDialog(this, "Escolha uma tarifa.");
        return;
    }

    br.com.banco.strategy.TarifaStrategy strategy;
    try {
        strategy = br.com.banco.strategy.TarifaStrategy.valueOf(sel);
    } catch (IllegalArgumentException ex) {
        JOptionPane.showMessageDialog(this, "Tarifa invÃ¡lida.");
        return;
    }

    // 2) aplica a tarifa (policy A: nÃ£o cobra se faltar saldo) e persiste se cobrou
    double cobrada = tarifaService.aplicar(conta, strategy); // retorna 0.0 se nÃ£o cobrou
    if (cobrada > 0) {
        try {
            bancoService.salvarCompleto("contas_atualizadas.txt");
            JOptionPane.showMessageDialog(this, "Tarifa aplicada: " + BRL.format(cobrada));
        } catch (java.io.IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar: " + e.getMessage(),
                    "I/O", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Tarifa nÃ£o aplicada (isenta ou saldo insuficiente).");
    }

    // 3) atualiza a UI
    lblSaldo.setText("Saldo: " + BRL.format(conta.getSaldo()));
    atualizarTarifaPrevista();  // recalcule a label com a tarifa prevista
    }//GEN-LAST:event_btnAplicarTarifaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAplicarTarifa;
    private javax.swing.JButton btnSalvarTitular;
    private javax.swing.JButton btnSalvarTitular1;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cmbTarifa;
    private javax.swing.JLabel lblI;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblS;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblTarifaPrevista;
    private javax.swing.JLabel lblTarifarEm;
    private javax.swing.JLabel lblTitular;
    private javax.swing.JTextField txtTitular;
    // End of variables declaration//GEN-END:variables
}
